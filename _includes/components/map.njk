<div id="map"></div>

<script>



/////////////////////////
//	    MAP STYLES     //
/////////////////////////   

// CREATE MAP
var map = L.map('map', {
  	zoomDelta: 0.5,
  	zoomSnap: 0.5,
	scrollWheelZoom: false
});

// Set Initial Active Area
function defineViewport(x, y, w, h) {

	map.setActiveArea({
		position: "absolute",
		left: 0,
		top: 0,
		width: w,
		height: h
	});

}

var openingView = [46.85, -109.45]
var openingZoom = 7

map.setView(openingView, openingZoom);

// var OSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
//   	maxZoom: 19,
//   	attribution: '© OpenStreetMap'
// }).addTo(map);




var basemapPane = map.createPane('basemap').style.zIndex = 100;
var Basemap = L.tileLayer(
  "https://api.mapbox.com/styles/v1/macdadmin/cl4vplzgx001414pbt3cvnv48/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoibWFjZGFkbWluIiwiYSI6ImNrcnkyd3c4eTB3OHEyb3MzNHMyeXN5MDAifQ.dDNnOPePgwvhR3vD4pHt-Q", {
    pane: 'basemap'
  }
).addTo(map);

var topPane = map.createPane('top').style.zIndex = 450;
map.getPane('top').style.pointerEvents = 'none';

var topLayer = L.tileLayer('https://api.mapbox.com/styles/v1/macdadmin/cl4uystie000414pcpa31qi4o/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoibWFjZGFkbWluIiwiYSI6ImNrcnkyd3c4eTB3OHEyb3MzNHMyeXN5MDAifQ.dDNnOPePgwvhR3vD4pHt-Q', {
        //attribution: '©OpenStreetMap, ©CartoDB',
        pane: 'top',
   		//tileSize: 512,
}).addTo(map);

// var token ="pk.eyJ1IjoibWFjZGFkbWluIiwiYSI6ImNrcnkyd3c4eTB3OHEyb3MzNHMyeXN5MDAifQ.dDNnOPePgwvhR3vD4pHt-Q";
// var gl = L.mapboxGL({
//     accessToken: token,
//     pane: 'top-pane',
//     offset: -1,
//     tileSize: 256*2,
//     style: 'mapbox://styles/macdadmin/ckry56epi7pnn1bruotbmpb8y'
// }).addTo(map);






////////////////////////////////
//	    DISTRICTS GEOJSON     //
//////////////////////////////// 


// LOAD POST DATA FROM /districts.json
   let postData = [];
   document.addEventListener('DOMContentLoaded', function (event) {
      fetch('/districts.json')
      .then((response) => response.json())
      .then((data_server) => { 
         
         postData = data_server;


         // LOAD DISTRICT GEOJSON VIA AJAX
         var districtBoundaries = new L.GeoJSON.AJAX("/_includes/assets/js/district-boundaries_simplified.geojson",{
                style: baseStyle,
                onEachFeature: function (feature, layer) {

	               	// ON EACH FEATURE: JOIN POST DATA WITH GEOJSON
		            match = postData.find((element) => element.id === feature.properties.slug);
		            Object.assign(feature.properties, match);

	               	// BIND POPUP
		            layer.bindPopup(''); //unclear why this is needed... popup content managed with "onclick" event

	              	layer.on({
			            // ON EACH FEATURE: CLICKED
				        click: function(e) {

						  	featureGlobal = e.target;
						  	console.log(featureGlobal);

						  	console.log('clicked: set "featureGlobal" as "' + featureGlobal.feature.properties.slug + '"');
							districtBoundaries.setStyle(baseStyle);
							featureGlobal.setStyle(selectStyle);
							featureGlobal.bringToFront();
						  	barba.go(feature.properties.permalink);
						  	
						  	if (document.querySelector('.selected')){
						  		console.log('remove "selected class"')
						  		document.querySelector('.selected').classList.remove('selected');
						  	}
						  	featureGlobal._path.classList.add("selected"); //returns svg DOM object

							featureGlobal.bringToFront(); // bring to front

						  	// REBIND POPUP ON CLICK
					    	e.target.bindPopup(e.target.feature.properties.title, {className: 'hide-popup'}).openPopup();
					    	//e.target.unbindPopup();
							//console.log(featureGlobal);


						},
			            // ON EACH FEATURE: HOVERED
						mouseover: function(e) {
							//e.target.bringToFront();
							//featureGlobal.bringToFront();

							function customTip() {
							    e.target.unbindTooltip();
							    if(!e.target.isPopupOpen()) {
							    	e.target.bindTooltip(e.target.feature.properties.title).openTooltip();
							    };
							}
							customTip();
						},
						mouseout: function(e) {
							//e.target.bringToBack();
							//console.log(e.target.getStyle());
							//e.target.setStyle(baseStyle);
						}
				    });
               }
            })


         	// ADD DISTRICT BOUNDARIES TO MAP
         	districtBoundaries.on('data:loaded', function() {

	         	console.log("------- ADDING DISTRICTS -------");
	            map.addLayer(this);

			  	// INTERACTIONS BTW MAP + DISTRICT BOUNDARIES  
	            map.on({
				    // RESET ON BASEMAP CLICK
				    click: function(e) {
					  	console.log('clicked: basemap');
					  	districtBoundaries.setStyle(baseStyle); //reset district boundaries style
					  	featureGlobal = {} // clear global feature

					  	// REMOVE SELECTED CLASS
					  	if (document.querySelector('.selected')){
					  		console.log('remove "selected class"')
					  		document.querySelector('.selected').classList.remove('selected');
					  	}

				    	// NAVIGATE TO ROOT
					  	if (barba) { 
						  	barba.go('/') // barba
					  	} else { 
					  		window.location.href = '/'; // fallback
					  	}
					}
				});

	         	console.log("------- ADDED -------");
	         });
      });

   });

   
   /////////////////////////
   //	   MAP STYLES     //
   /////////////////////////

   // BASIC STYLE
   var baseStyle = {
       	// "color": "orange",
 	    // "fillColor": "blue",
 	    // "fillOpacity": 0,
 	    // "weight": 1,
        "smoothFactor" : 0,

    };
   	var selectStyle = {
       	//"color": "blue",
 	    //"fillColor": "blue",
 	    // "weight": 3,
        "smoothFactor" : 0,
    };


</script>