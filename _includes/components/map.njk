<div id="map"></div>
<script>


/////////////////////////
//	    MAP STYLES     //
/////////////////////////   

// CREATE MAP
var map = L.map('map', {
  	zoomDelta: 1,
  	zoomSnap: 1,
	scrollWheelZoom: false
});

if (settings.mapSettings.center.coordinates){
	var openingView = [settings.mapSettings.center.coordinates[1], settings.mapSettings.center.coordinates[0]]
} else {
	var openingView = [46.85, -109.45]
}
if (settings.mapSettings.zoom){
	var openingZoom = settings.mapSettings.zoom
} else {
	var openingZoom = 6
}

mapVerticalCenter = 120; //sets initial vertical offset
mapHorizontalCenter = 0; //sets initial vertical offset (overwritten in centerMap function)

// Set Initial Active Area
var defineViewport = function(x, y, w, h) {
	map.setActiveArea({
		position: "absolute",
		left: x,
		top: y,
		width: w,
		height: h
	});
}
defineViewport("0px","0px", window.innerWidth - mapHorizontalCenter + "px", window.innerHeight - mapVerticalCenter + "px");

map.setView(openingView, openingZoom);

// var OSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
//   	maxZoom: 19,
//   	attribution: '© OpenStreetMap'
// }).addTo(map);

var basemapPane = map.createPane('basemap').style.zIndex = 100;
var Basemap = L.tileLayer(
  "https://api.mapbox.com/styles/v1/macdadmin/cl52ur84v000214picho24m4d/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoibWFjZGFkbWluIiwiYSI6ImNrcnkyd3c4eTB3OHEyb3MzNHMyeXN5MDAifQ.dDNnOPePgwvhR3vD4pHt-Q", {
    	pane: 'basemap'
  }
).addTo(map);

var topPane = map.createPane('top').style.zIndex = 450;
map.getPane('top').style.pointerEvents = 'none';

var topLayer = L.tileLayer('https://api.mapbox.com/styles/v1/macdadmin/cl4uystie000414pcpa31qi4o/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoibWFjZGFkbWluIiwiYSI6ImNrcnkyd3c4eTB3OHEyb3MzNHMyeXN5MDAifQ.dDNnOPePgwvhR3vD4pHt-Q', {
        //attribution: '©OpenStreetMap, ©CartoDB',
        pane: 'top',
}).addTo(map);

// var token ="pk.eyJ1IjoibWFjZGFkbWluIiwiYSI6ImNrcnkyd3c4eTB3OHEyb3MzNHMyeXN5MDAifQ.dDNnOPePgwvhR3vD4pHt-Q";
// var gl = L.mapboxGL({
//     accessToken: token,
//     pane: 'top-pane',
//     offset: -1,
//     tileSize: 256*2,
//     style: 'mapbox://styles/macdadmin/ckry56epi7pnn1bruotbmpb8y'
// }).addTo(map);


var basemapPane = map.createPane('texture').style.zIndex = 200;
L.GridLayer.texture = L.GridLayer.extend({
    createTile: function (coords) {
        var tile = document.createElement('img');
		tile.src ='/static/geospatial/paper-1.png';
        return tile;
    },
});
L.gridLayer.textureMap = function(opts) {
    return new L.GridLayer.texture(opts);
};
map.addLayer( L.gridLayer.textureMap() );


globalLayerState = [] // declare array for handling active/disabled layers on toggle



////////////////////////////////
//	    DISTRICTS GEOJSON     //
//////////////////////////////// 


// LOAD POST DATA FROM /districts.json
   let postData = [];
   document.addEventListener('DOMContentLoaded', function (event) {
      fetch('/districts.json')
      .then((response) => response.json())
      .then((data_server) => { 
         
         postData = data_server;


         // LOAD DISTRICT GEOJSON VIA AJAX
         var districtBoundariesActive = new L.GeoJSON.AJAX(settings.mapSettings.geojson,{
                style: districtsActive,
                onEachFeature: function (feature, layer) {

	               	// ON EACH FEATURE: JOIN POST DATA WITH GEOJSON
		            match = postData.find((element) => element.id === feature.properties.slug);
		            Object.assign(feature.properties, match);

	               	// BIND POPUP
		            layer.bindPopup(''); //unclear why this is needed... popup content managed with "onclick" event

	              	layer.on({
			            // ON EACH FEATURE: CLICKED
				        click: function(e) {

						  	featureGlobal = e.target;
						  	console.log(featureGlobal);

						  	console.log('clicked: set "featureGlobal" as "' + featureGlobal.feature.properties.slug + '"');
							districtBoundariesActive.setStyle(districtsActive);
							featureGlobal.bringToFront();
						  	barba.go(feature.properties.permalink);
						  	
						  	if (document.querySelector('.selected')){
						  		console.log('remove "selected class"')
						  		document.querySelector('.selected').classList.remove('selected');
						  	}
						  	featureGlobal._path.classList.add("selected"); //returns svg DOM object

							//featureGlobal.bringToFront(); // bring to front

						  	// REBIND POPUP ON CLICK
					    	e.target.bindPopup(e.target.feature.properties.title, {className: 'hide-popup'}).openPopup();
					    	//e.target.unbindPopup();
							//console.log(featureGlobal);


						},
			            // ON EACH FEATURE: HOVERED
						mouseover: function(e) {
							//e.target.bringToFront();
							//featureGlobal.bringToFront();

							function customTip() {
							    e.target.unbindTooltip();
							    if(!e.target.isPopupOpen()) {
							    	e.target.bindTooltip(e.target.feature.properties.title).openTooltip();
							    };
							}
							customTip();
						},
						mouseout: function(e) {
							//e.target.bringToBack();
							//console.log(e.target.getStyle());
							//e.target.setStyle(baseStyle);
						}
				    });
               }
            })

         	var districtBoundariesDisabled = new L.GeoJSON.AJAX(settings.mapSettings.geojson,{
            	style: districtsDisabled
            });


         	// ADD DISTRICT BOUNDARIES TO MAP
         	districtBoundariesActive.on('data:loaded', function() {

	         	console.log("------- ADDING DISTRICTS -------");
	         	console.log(districtBoundariesActive);

	         	//map.addLayer(storyLayerActive);
			    var districtsLayerHandler = {
			    		layerHandlerName: 'districtsLayerHandler',
						active: true,
						activeLayer: districtBoundariesActive,
						disabledLayer: districtBoundariesDisabled
		     	}
		     	globalLayerState.push(districtsLayerHandler);

	            map.addLayer(this);
        		//layerControl.addOverlay(this, "Districts"); // alternatively can add layer to map via layer control


			  	// INTERACTIONS BTW MAP + DISTRICT BOUNDARIES  
	            map.on({
				    // RESET ON BASEMAP CLICK
				    click: function(e) {
					  	console.log('clicked: basemap');
					  	//districtBoundariesActive.setStyle(baseStyle); //reset district boundaries style
					  	featureGlobal = {} // clear global feature

					  	// REMOVE SELECTED CLASS
					  	if (document.querySelector('.selected')){
					  		console.log('remove "selected class"')
					  		document.querySelector('.selected').classList.remove('selected');
					  	}

				    	// NAVIGATE TO ROOT
					  	if (barba) { 
						  	barba.go('/') // barba
					  	} else { 
					  		window.location.href = '/'; // fallback
					  	}
					}
				});
	         	console.log("------- ADDED -------");
	         	loadStories();

	         });

         	//centerMap(false, '0px', mapVerticalCenter);
      });

   });



////////////////////////////////
//	    STORIES GEOJSON       //
//////////////////////////////// 

var storiesPane = map.createPane('stories').style.zIndex = 450;

// LOAD POST DATA FROM /stories.json
let stories = [];
var loadStories = function() { // CALLED FROM DISTRICTS GEOJSON ASYC FUNCTION
    fetch('/stories.json')
     .then((response) => response.json())
     .then((data_server) => { 
     
     	// add json data to variable and parse location data to json format
    	stories = data_server;
     	for (var i = stories.features.length - 1; i >= 0; i--) {
     		stories.features[i].geometry = JSON.parse(stories.features[i].geometry);
	 	}
	 	console.log(stories);

     	// add layer group and marker for each story
		storyLayerActive = new L.GeoJSON(stories, {
		    pointToLayer: function (feature, latlng) {
		        return L.circleMarker(latlng, {
			      	pane: 'stories', // pane option is for individual layers.
		        	radius: 10,
					className: 'stories active'
			    })
		    },
		    onEachFeature: function (feature, layer) {
		    	// BIND POPUP
	            layer.bindPopup(''); //unclear why this is needed... popup content managed with "onclick" event

              	layer.on({
		            // ON EACH FEATURE: CLICKED
			        click: function(e) {

					  	featureGlobal = e.target;
					  	console.log(featureGlobal);

					  	console.log('clicked: set "featureGlobal" as "' + featureGlobal.feature.properties.slug + '"');
						//districtBoundariesActive.setStyle(baseStyle);
						//featureGlobal.setStyle(selectStyle);
						featureGlobal.bringToFront();
					  	barba.go(feature.properties.permalink);
					  	
					  	if (document.querySelector('.selected')){
					  		console.log('remove "selected class"')
					  		document.querySelector('.selected').classList.remove('selected');
					  	}
					  	featureGlobal._path.classList.add("selected"); //returns svg DOM object

						//featureGlobal.bringToFront(); // bring to front

					  	// REBIND POPUP ON CLICK
				    	e.target.bindPopup(e.target.feature.properties.title, {className: 'hide-popup'}).openPopup();
				    	//e.target.unbindPopup();
						//console.log(featureGlobal);
					}, 

			            // ON EACH FEATURE: HOVERED
						mouseover: function(e) {
							function customTip() {
							    e.target.unbindTooltip();
							    if(!e.target.isPopupOpen()) {
							    	e.target.bindTooltip(e.target.feature.properties.title).openTooltip();
							    };
							}
							customTip();
						},
						mouseout: function(e) {
							// ...mouseout functions...
						}
		    	})
	        }
	    });

	    storyLayerDisabled = new L.GeoJSON(stories, {
		    pointToLayer: function (feature, latlng) {
		        return L.circleMarker(latlng, {
			      	pane: 'stories', // pane option is for individual layers.
		        	radius: 5,
					className: 'stories disabled'
			    })
			}
	    });

	    //map.addLayer(storyLayerActive);
	    var storiesLayerHandler = {
	    		layerHandlerName: 'storiesLayerHandler',
				active: false,
				activeLayer: storyLayerActive,
				disabledLayer: storyLayerDisabled
     	}
     	globalLayerState.push(storiesLayerHandler)
	    map.addLayer(storyLayerDisabled);

		layerControl.addOverlay(storyLayerActive, "Stories"); // alternatively can add layer to map via layer control

  	});
};



// LAYER CONTROL
var dataLayers = {};
var layerControl = L.control.layers(dataLayers)
layerControl.addTo(map);
layerControl.setPosition("topleft")

   




/////////////////////////
//	    MAP STYLES     //
/////////////////////////

// BASIC STYLE
var districtsActive = {
	className: "district-boundaries active",
	"smoothFactor" : 0
};
var districtsDisabled = {
	className: "district-boundaries disabled",
	"smoothFactor" : 0
};

var activeStyle = {
	className: "active",
};

var geojsonMarkerOptions = {
	radius: 10,
	className: 'stories'
};


</script>